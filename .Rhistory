theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Muertes por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#ad3e5d", colour = "#FFFFFF00") +
geom_text(data = dd_today[dd_today$norm_dead > 2,], size = 6,
aes(label = round(norm_dead, digits = 1)), hjust= 1.4,
color="white", size=3.5, family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -0.2, aes(country = iso2c), size = 4)
print(p4_insta)
data_pruebas <- dd_today %>% arrange(as.numeric(-pruebas_millon))
# Letalidad y población ####
p5_insta <- ggplot(data_pruebas, aes(x = country, y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
aes(label = round(pruebas_millon, digits = 1)), hjust= 1.4,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
glimpse(dd_today)
# Letalidad y población ####
p5_insta <- ggplot(dd_today, aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
aes(label = round(pruebas_millon, digits = 1)), hjust= 1.4,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
p5_insta <- ggplot(dd_today, aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00")
print(p5_insta)
p5_insta <- ggplot(data_pruebas, aes(x = country, y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00")
print(p5_insta)
as_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00")
p5_insta <- ggplot(dd_today, aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00")
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00")
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
# geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
#           aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
#           color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
# geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
#           aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
#           color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6)
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
# geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
#           aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
#           color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6, aes(label = round(pruebas_millon, digits = 0)))
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
# geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
#           aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
#           color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6, aes(label = round(as.numeric(pruebas_millon), digits = 0)))
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
# geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
#           aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
#           color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6, aes(label = pruebas_millon))
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
# geom_text(data = dd_today[dd_today$pruebas_millon > 1400,], size = 6,
#           aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
#           color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
geom_text(size = 6, aes(label = pruebas_millon))
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6,
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
print(p5_insta)
ggsave(p5_insta, filename = paste0("/home/jorgeluis/Nextcloud/nibö/coronavirus/covid19_niboe_", fecha_file, "_insta_pruebas.png"), width=6, height=6)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6,
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4) +
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6,
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.4,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6,
aes(label = round(pruebas_millon, digits = 0)), hjust= 1,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6,
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.2,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6, data=subset(dd_today, pruebas_millon > 600)
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.2,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas aplicadas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6, data=subset(dd_today, pruebas_millon > 600),
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.2,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
ggsave(p5_insta, filename = paste0("/home/jorgeluis/Nextcloud/nibö/coronavirus/covid19_niboe_", fecha_file, "_insta_pruebas.png"), width=6, height=6)
# Letalidad y población ####
p5_insta <- ggplot(dd_today[!is.na(dd_today$pruebas_millon),],
aes(x = reorder(country, pruebas_millon), y = pruebas_millon)) +
coord_flip() +
theme_ft_rc(subtitle_family = "Roboto Condensed") +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(3,4,3,3,"mm"),
) +
labs(title = "Pruebas por cada millón de habitantes",
subtitle = paste0("COVID-19 en Latinoamérica. Actualizado al ", fecha2),
caption = "niboe.info | CC-BY-SA 4.0.\nFuente de datos: Johns Hopkins CSSE.") +
geom_bar(stat = "identity", fill = "#6AAFE6", colour = "#FFFFFF00") +
geom_text(size = 6, data=subset(dd_today, pruebas_millon > 600),
aes(label = round(pruebas_millon, digits = 0)), hjust= 1.2,
color="white", family = "Roboto Condensed", fontface = "bold") +
geom_flag(y = -120, aes(country = iso2c), size = 4)
print(p5_insta)
ggsave(p5_insta, filename = paste0("/home/jorgeluis/Nextcloud/nibö/coronavirus/covid19_niboe_", fecha_file, "_insta_pruebas.png"), width=6, height=6)
pacman::p_load(tidyverse, maps, hrbrthemes, leaflet, shiny, viridis)
runApp()
setwd("~/Code/R/covid19_map_v1")
runApp()
# Load packages
pacman::p_load(tidyverse, maps, hrbrthemes, plotly, ggmap, devtools, viridis,
coronavirus, nCov2019, shadowtext, rnaturalearth, ggsci, cowplot,
magick, scales, rvest, ggrepel, wbstats, ggflags, countrycode,
magrittr)
## Dataset for global map
datacov2 <- coronavirus %>%
select(country = Country.Region, type, cases, Lat, Long) %>%
group_by(country, Lat, Long, type) %>%
summarise(total_cases = sum(cases)) %>%
pivot_wider(names_from = type, values_from = total_cases) %>%
arrange(-confirmed) %>%
mutate(deadRate = death/confirmed * 100)
head(datacov2)
runApp()
casos
datacov2
runApp()
main()$odist
runApp()
datacov2
runApp()
# Cambios de nombres a español
datacov2 <- datacov2 %>%
mutate(country = ifelse(country == "Peru", "Perú", country)) %>%
mutate(country = ifelse(country == "Dominican Republic", "Rep. Dominicana", country)) %>%
mutate(country = ifelse(country == "Brazil", "Brasil", country)) %>%
mutate(country = ifelse(country == "Haiti", "Haití", country)) %>%
mutate(country = ifelse(country == "Panama", "Panamá", country)) %>%
mutate(country = ifelse(country == "Mexico", "México", country))
runApp()
